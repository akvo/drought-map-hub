version: "3.9"
services:
  mainnetwork:
    image: alpine:3.14
    command: ["tail", "-f", "/dev/null"]
  db:
    image: postgres:13-alpine
    volumes:
      - ./database/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - pg-data:/var/lib/postgresql/data
      # - ./database/script:/script:ro
    environment:
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - DB_HOST=$DB_HOST
      - DB_PASSWORD=$DB_PASSWORD
      - DB_SCHEMA=$DB_SCHEMA
      - DB_USER=$DB_USER
    ports:
      - "5433:5432"
  backend:
    image: python:3.9
    working_dir: /app
    command: ["./start.sh"]
    volumes:
      - ./backend:/app:delegated
    environment:
      - DB_SCHEMA=$DB_SCHEMA
      - DB_USER=$DB_USER
      - DB_PASSWORD=$DB_PASSWORD
      - DB_HOST=$DB_HOST
      - DEBUG=$DEBUG
      - SECRET_KEY=$SECRET_KEY
      - GEONODE_BASE_URL=$GEONODE_BASE_URL
      - GEONODE_ADMIN_USERNAME=$GEONODE_ADMIN_USERNAME
      - GEONODE_ADMIN_PASSWORD=$GEONODE_ADMIN_PASSWORD
      - RUNDECK_API_URL=$RUNDECK_API_URL
      - RUNDECK_API_TOKEN=$RUNDECK_API_TOKEN
      - COVERALLS_REPO_TOKEN=${COVERALLS_REPO_TOKEN:-}
      - EMAIL_HOST=$EMAIL_HOST
      - EMAIL_PORT=$EMAIL_PORT
      - EMAIL_USE_TLS=$EMAIL_USE_TLS
      - EMAIL_HOST_USER=$EMAIL_HOST_USER
      - EMAIL_HOST_PASSWORD=$EMAIL_HOST_PASSWORD
      - EMAIL_FROM=$EMAIL_FROM
      - WEBDOMAIN=$WEBDOMAIN
      - CSRF_TRUSTED_ORIGINS
    depends_on:
      - db
      - rundeck
  frontend:
    image: akvo/akvo-node-18-alpine:20230831.105309.b9593b7
    command: ["./start.sh"]
    volumes:
      - ./frontend:/app:delegated
    working_dir: /app
    environment:
      - WEBDOMAIN=${WEBDOMAIN}
      - SESSION_SECRET=${SESSION_SECRET}
      - GEONODE_BASE_URL=${GEONODE_BASE_URL}
    depends_on:
      - backend
  worker:
    image: python:3.9
    working_dir: /app
    command: ["./run_worker.sh"]
    volumes:
      - ./backend:/app:delegated
    environment:
      - DB_SCHEMA=$DB_SCHEMA
      - DB_USER=$DB_USER
      - DB_PASSWORD=$DB_PASSWORD
      - DB_HOST=$DB_HOST
      - DEBUG=$DEBUG
      - SECRET_KEY=$SECRET_KEY
      - GEONODE_BASE_URL=$GEONODE_BASE_URL
      - GEONODE_ADMIN_USERNAME=$GEONODE_ADMIN_USERNAME
      - GEONODE_ADMIN_PASSWORD=$GEONODE_ADMIN_PASSWORD
      - RUNDECK_API_URL=$RUNDECK_API_URL
      - RUNDECK_API_TOKEN=$RUNDECK_API_TOKEN
      - EMAIL_HOST=$EMAIL_HOST
      - EMAIL_PORT=$EMAIL_PORT
      - EMAIL_USE_TLS=$EMAIL_USE_TLS
      - EMAIL_HOST_USER=$EMAIL_HOST_USER
      - EMAIL_HOST_PASSWORD=$EMAIL_HOST_PASSWORD
      - EMAIL_FROM=$EMAIL_FROM
      - WEBDOMAIN=$WEBDOMAIN
      - CSRF_TRUSTED_ORIGINS
    depends_on:
      - backend
      - rundeck
  rundeck:
    build:
      context: ./
      dockerfile: rundeck/Dockerfile
    container_name: rundeck
    env_file: "./rundeck.env"
    environment:
      RUNDECK_SERVER_FORWARDED: true
      RUNDECK_API_TOKENS_DURATION_MAX: 0
    volumes:
      - ./rundeck/templates:/home/rundeck/server/config/templates
      - ./rundeck/data:/home/rundeck/server/data
      - ./rundeck/logs:/home/rundeck/server/logs
      - ./rundeck/realm.properties:/home/rundeck/server/config/realm.properties
      - ./.env:/home/rundeck/server/config/.env
volumes:
  pg-data:
