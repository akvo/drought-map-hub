---
services:
  mainnetwork:
    image: alpine:3.14
    command: ["tail", "-f", "/dev/null"]
    ports:
      - 8000:8000 # backend port
      - 5050:5050 # pgAdmin port
      - 81:81 # frontend port
      - 4440:4440 # rundeck port
  db:
    image: postgres:13-alpine
    container_name: db
    restart: unless-stopped
    env_file: "./.env"
    volumes:
      - ./database/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - pg-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 2s
      timeout: 5s
      retries: 5
    network_mode: service:mainnetwork
  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    env_file: "./.env"
    restart: unless-stopped
    working_dir: /app
    depends_on:
      db:
        condition: service_healthy
    network_mode: service:mainnetwork
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    env_file: "./.env"
    restart: unless-stopped
    working_dir: /app
    network_mode: service:mainnetwork
    depends_on:
      - backend
  worker:
    container_name: worker
    build:
      context: ./backend
      dockerfile: Dockerfile.worker.prod
    env_file: "./.env"
    restart: unless-stopped
    working_dir: /app
    depends_on:
      db:
        condition: service_healthy
    network_mode: service:mainnetwork

  backend-cron:
    container_name: backend-cron
    build:
      context: ./backend
      dockerfile: Dockerfile.cron
    env_file: "./.env"
    restart: unless-stopped
    working_dir: /app
    depends_on:
      db:
        condition: service_healthy
    network_mode: service:mainnetwork
  rundeck:
    build:
      context: ./
      dockerfile: rundeck/Dockerfile
    container_name: rundeck
    env_file: "./rundeck.env"
    environment:
      RUNDECK_SERVER_FORWARDED: true
      RUNDECK_API_TOKENS_DURATION_MAX: 0
    network_mode: service:mainnetwork
    volumes:
      - rundeck_data:/home/rundeck/server/data
      - rundeck_etl:/home/rundeck/server/logs
      - rundeck_logs:/home/rundeck/server/logs
      - ./rundeck/realm.properties:/home/rundeck/server/config/realm.properties
      - ./rundeck/templates:/home/rundeck/server/config/templates
      - ./.env:/home/rundeck/server/config/.env

volumes:
  pg-data:
  rundeck_data:
  rundeck_etl:
  rundeck_logs:
